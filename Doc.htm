<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
           "http://www.w3.org/TR/REC-html40/loose.dtd">
<html>
<meta name="GENERATOR" content="TtHgold 4.00">
 <style type="text/css"> div.p { margin-top: 7pt;}</style>
 <style type="text/css"><!--
 td div.comp { margin-top: -0.6ex; margin-bottom: -1ex;}
 td div.comb { margin-top: -0.6ex; margin-bottom: -.6ex;}
 td div.hrcomp { line-height: 0.9; margin-top: -0.8ex; margin-bottom: -1ex;}
 td div.norm {line-height:normal;}
 span.roman {font-family: serif; font-style: normal; font-weight: normal;} 
 span.overacc2 {position: relative;  left: .8em; top: -1.2ex;}
 span.overacc1 {position: relative;  left: .6em; top: -1.2ex;} --></style>
 


<title> PlotTbl: Plot the data stored in a table</title>
 
<h1 align="center">PlotTbl: Plot the data stored in a table </h1>

<h3 align="center">Jeff Miller </h3>

<div class="p"><!----></div>
 
<div class="p"><!----></div>
 
<h1>Contents </h1><a href="#tth_sEc1"
>1&nbsp; Overview</a><br />
<a href="#tth_sEc2"
>2&nbsp; Requirements</a><br />
<a href="#tth_sEc3"
>3&nbsp; License</a><br />
<a href="#tth_sEc4"
>4&nbsp; Syntax</a><br />
<a href="#tth_sEc5"
>5&nbsp; Examples</a><br />
<a href="#tth_sEc6"
>6&nbsp; Name-value pairs for design-element control</a><br />
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#tth_sEc6.1"
>6.1&nbsp; Name-value pairs for line type control</a><br />
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#tth_sEc6.2"
>6.2&nbsp; Name-value pairs for marker type control</a><br />
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#tth_sEc6.3"
>6.3&nbsp; Name-value pairs for color control</a><br />
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#tth_sEc6.4"
>6.4&nbsp; Name-value pairs for line width control</a><br />
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#tth_sEc6.5"
>6.5&nbsp; Name-value pairs for marker sizes control</a><br />
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#tth_sEc6.6"
>6.6&nbsp; Name-value pairs for subplot row and column control</a><br />
<a href="#tth_sEc7"
>7&nbsp; Name-value pairs for control of axis labels</a><br />
<a href="#tth_sEc8"
>8&nbsp; Name-value pairs for control of legends</a><br />
<a href="#tth_sEc9"
>9&nbsp; Tips</a><br />
<a href="#tth_sEcA"
>A&nbsp; Appendix: A complete list of name-value pairs</a><br />
<a href="#tth_sEcB"
>B&nbsp; Appendix: Line types in MATLAB</a><br />
<a href="#tth_sEcC"
>C&nbsp; Appendix: Marker types in MATLAB</a><br />
<a href="#tth_sEcD"
>D&nbsp; Appendix: Colors in MATLAB</a><br />


<div class="p"><!----></div>
 <h2><a name="tth_sEc1">
1</a>&nbsp;&nbsp;Overview</h2>

<div class="p"><!----></div>
PlotTbl is a general-purpose function for creating a figure from data stored in a table.
It was designed to be used with tables in which some variables hold the X/Y values to be plotted and
other variables hold numeric codes that distinguish different conditions.
With such data, PlotTbl makes it easy to make plots showing X/Y relationships
for each condition separately, with different conditions distinguished by being in different subplots,
different line types (e.g., solid/dashed), different marker types, different colors, etc.
Some options are provided for control over titles, X and Y axis labels, legends, etc.

<div class="p"><!----></div>
The screenshots on GitHub show an example data table and a set of figures produced
from it by PlotTbl.
All but one of the figures-the last one-were produced by a single PlotTbl function call.

<div class="p"><!----></div>
Users needing even more fine-grained control over individual subplots can call the
function SubplotTbl, which plots only one subplot within a subplot-type figure.

<div class="p"><!----></div>
 <h2><a name="tth_sEc2">
2</a>&nbsp;&nbsp;Requirements</h2>

<div class="p"><!----></div>
You need a version of MATLAB that supports the "table" data type.
You also need my MATLAB package ExtractNameVal, which is available here: <br />
https://github.com/milleratotago/ExtractNameVal

<div class="p"><!----></div>
 <h2><a name="tth_sEc3">
3</a>&nbsp;&nbsp;License</h2>

<div class="p"><!----></div>
Copyright (C) 2017, Jeff Miller

<div class="p"><!----></div>
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

<div class="p"><!----></div>
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

<div class="p"><!----></div>
You should have received a copy of the GNU General Public License
along with this program.  If not, see &lt;http://www.gnu.org/licenses/&#62;.

<div class="p"><!----></div>
 <h2><a name="tth_sEc4">
4</a>&nbsp;&nbsp;Syntax</h2>

<div class="p"><!----></div>
PlotTbl is called with one of these four basic parameter configurations:

<ol type="1">
<li> PlotTbl(Tbl,Name,Value);
<div class="p"><!----></div>
</li>

<li> PlotTbl(Tbl,sX,sY,Name,Value);
<div class="p"><!----></div>
</li>

<li> PlotTbl(Tbl,sX,Name,Value);
<div class="p"><!----></div>
</li>

<li> PlotTbl(Tbl,sY,Name,Value);
<div class="p"><!----></div>
</li>
</ol>

<div class="p"><!----></div>
Tbl is the data table containing the data to be plotted.

<div class="p"><!----></div>
sX and sY are strings indicating the names of the X and Y variables to be plotted.
These parameters <em>must</em> be omitted when the variable names are specified by name-value pairs
(see XVars and YVars below).

<div class="p"><!----></div>
Name,Value represents a series of name-value pair arguments.

<div class="p"><!----></div>
 <h2><a name="tth_sEc5">
5</a>&nbsp;&nbsp;Examples</h2>

<div class="p"><!----></div>
Suppose that you have a table AWHDat containing the average heights and weights of male
and female children of three different nationalities in six different age groups (see PlotTblDemo.m).
AWHDat.Gender is 1/2 to code male/female, and AWHDat.Nationality is 1/2/3 to code three nationalities
(e.g., Germany, France, Spain), and AWHDat.Age holds the ages (2, 4, 6, 8, 10, 12).
The variables AWHDat.AvgWeight, and AWHDat.AvgHeight hold the average
weights and heights of the children of each gender, nationality, and age group.

<div class="p"><!----></div>
  <br />Example: <i>PlotTbl(AWHDat,'Age','AvgWeight','SubplotRowsCodeVar',... <br />
'Gender','SubplotColsCodeVar','Nationality')</i> <br />

<div class="p"><!----></div>
This command produces a plot with six subplots (2 rows x 3 columns).
The two rows of subplots correspond to genders 1 and 2,
and the three columns correspond to the three nationalities.
Each plot has Age on the X axis and AvgWeight on the Y axis.

<div class="p"><!----></div>
  <br />Example: <i>PlotTbl(AWHDat,'Age','SubplotRowsYVars',{'AvgWeight','AvgHeight'},... <br />
'SubplotColsCodeVar','Nationality','LineTypeCodeVar','Gender')</i> <br />

<div class="p"><!----></div>
This command produces a 6-subplot plot with plots of AvgWeight versus Age in the top row and
AvgHeight versus Age in the bottom row.  The three nationalities are the three columns.
There are two lines per subplot-one for each Gender-with the lines distinguished by
line type (i.e., solid, dashed).

<div class="p"><!----></div>
  <br />Example: <i>PlotTbl(AWHDat,'Age','SubplotRowsYVars',{'AvgWeight','AvgHeight'},... <br />
'SubplotColsCodeVar','Nationality','LineTypeCodeVar','Gender',... <br />
'LineTypeLegend',{'Male','Female'})</i> <br />

<div class="p"><!----></div>
This command produces the same plot as the previous one except that the two Gender values are called Male and Female in the legend.

<div class="p"><!----></div>
For more examples, see Demo.m.

<div class="p"><!----></div>
 <h2><a name="tth_sEc6">
6</a>&nbsp;&nbsp;Name-value pairs for design-element control</h2>

<div class="p"><!----></div>
There are seven similar sets of name-value pair options to control the organization of
the figure in terms of its design elements, namely:

<ul>
<li> line types, such as solid versus dotted (LineType)
<div class="p"><!----></div>
</li>

<li> marker types, such as squares versus circles (MarkerType)
<div class="p"><!----></div>
</li>

<li> color (Color)
<div class="p"><!----></div>
</li>

<li> line width (LineWidth)
<div class="p"><!----></div>
</li>

<li> marker size (MarkerSize)
<div class="p"><!----></div>
</li>

<li> subplot rows (SubplotRows)
<div class="p"><!----></div>
</li>

<li> subplot columns (SubplotCols)
<div class="p"><!----></div>
</li>
</ul>

<div class="p"><!----></div>

<div class="p"><!----></div>
     <h3><a name="tth_sEc6.1">
6.1</a>&nbsp;&nbsp;Name-value pairs for line type control</h3>

<div class="p"><!----></div>
  <br />Name-value pair: <i>LineTypeCodeVar - variable name</i>

<div class="p"><!----></div>
This name-value pair indicates that a different line type should be used
for each different value of the indicated variable.
The variable name is specified as a character vector, say sVar.

<div class="p"><!----></div>
  <br />Example: <i>PlotTbl(...,'LineTypeCodeVar','Gender')</i> <br />

<div class="p"><!----></div>
In this example different line types will be used to plot the data for males versus females.

<div class="p"><!----></div>
  <br />Name-value pair: <i>LineTypeXVars - cell array of variable names</i>

<div class="p"><!----></div>
This name-value pair indicates that different line types should be used to distinguish
different variables in the table, with those variables being used as X's in the X/Y plots.

<div class="p"><!----></div>
  <br />Example: <i>PlotTbl(...,'LineTypeXVars',{'AvgHeight' 'AvgWeight'})</i> <br />

<div class="p"><!----></div>
In this example different line types will be used depending on whether the X values
are AvgHeight or AvgWeight.

<div class="p"><!----></div>
  <br />Name-value pair: <i>LineTypeYVars - cell array of variable names</i>

<div class="p"><!----></div>
This name-value pair indicates that different line types should be used to distinguish
different variables in the table, with those variables being used as Y's in the X/Y plots.

<div class="p"><!----></div>
  <br />Example: <i>PlotTbl(...,'LineTypeYVars',{'AvgHeight' 'AvgWeight'})</i> <br />

<div class="p"><!----></div>
In this example different line types will be used depending on whether the Y values
are AvgHeight or AvgWeight. <br />

<div class="p"><!----></div>
Note: You should never specify <em>more than one</em> of the three options
LineTypeCodeVar, LineTypeXVars, and LineTypeYVars.
That is, line types can only be distinguished in one way or the other-not several.
If you want the line types to be distinguished in more than one way, use other
design elements.

<div class="p"><!----></div>
  <br />Name-value pair: <i>LineTypeSpecs - cell array of line type specifications</i>

<div class="p"><!----></div>
This name-value pair indicates that you want to replace the default set of line type
specifications with a new set.
Use MATLAB's standard line type specifications in whatever order you prefer.
The line types will be used in order by values of the CodeVar
or the order of the variables listed for LineTypeXVars or LineTypeYVars.

<div class="p"><!----></div>
  <br />Example: <i>PlotTbl(...,'LineTypeSpecs',{':' '-.'})</i> <br />

<div class="p"><!----></div>
In this example the first line will be dotted and the second line will be dash/dot.

<div class="p"><!----></div>
  <br />Name-value pair: <i>LineTypeLegend - cell array of legend labels</i>

<div class="p"><!----></div>
This name-value pair indicates that you want to replace the default labels of the line types
with the new labels indicated in your cell array.

<div class="p"><!----></div>
  <br />Example: <i>PlotTbl(...,'LineTypeLegend',{'Male' 'Female'})</i> <br />

<div class="p"><!----></div>
In this example the legends for the first and second line types will be "Male"
and "Female", respectively.
This would make sense if used in combination with the name-value pair 'LineTypeCodeVar','Gender'.

<div class="p"><!----></div>
  <br />Note: Name-value pairs analogous to LineTypeCodeVar, LineTypeXVars, LineTypeYVars,
LineTypeSpecs, and LineTypeLegend, are available for controlling marker types, colors,
line widths, and marker sizes, as described next.
There are also very similar options for controlling subplots.

<div class="p"><!----></div>
     <h3><a name="tth_sEc6.2">
6.2</a>&nbsp;&nbsp;Name-value pairs for marker type control</h3>

<div class="p"><!----></div>
  <br />Name-value pair: <i>MarkerTypeCodeVar - variable name</i>

<div class="p"><!----></div>
This name-value pair indicates that a different marker type should be used
for each different value of the indicated variable.
The variable name is specified as a character vector, say sVar.

<div class="p"><!----></div>
  <br />Example: <i>PlotTbl(...,'MarkerTypeCodeVar','Gender')</i> <br />

<div class="p"><!----></div>
In this example different marker types will be used to plot the data for males versus females.

<div class="p"><!----></div>
  <br />Name-value pair: <i>MarkerTypeXVars - cell array of variable names</i>

<div class="p"><!----></div>
This name-value pair indicates that different marker types should be used to distinguish
different variables in the table, with those variables being used as X's in the X/Y plots.

<div class="p"><!----></div>
  <br />Example: <i>PlotTbl(...,'MarkerTypeXVars',{'AvgHeight' 'AvgWeight'})</i> <br />

<div class="p"><!----></div>
In this example different marker types will be used depending on whether the X values
are AvgHeight or AvgWeight.

<div class="p"><!----></div>
  <br />Name-value pair: <i>MarkerTypeYVars - cell array of variable names</i>

<div class="p"><!----></div>
This name-value pair indicates that different marker types should be used to distinguish
different variables in the table, with those variables being used as Y's in the X/Y plots.

<div class="p"><!----></div>
  <br />Example: <i>PlotTbl(...,'MarkerTypeYVars',{'AvgHeight' 'AvgWeight'})</i> <br />

<div class="p"><!----></div>
In this example different marker types will be used depending on whether the Y values
are AvgHeight or AvgWeight. <br />

<div class="p"><!----></div>
Note: You should never specify <em>more than one</em> of the three options
MarkerTypeCodeVar, MarkerTypeXVars, and MarkerTypeYVars.
That is, marker types can only be distinguished in one way or the other-not several.
If you want the marker types to be distinguished in more than one way, use other
design elements.

<div class="p"><!----></div>
  <br />Name-value pair: <i>MarkerTypeSpecs - string list of marker type specifications</i>

<div class="p"><!----></div>
This name-value pair indicates that you want to replace the default set of marker type
specifications with a new set.
Use MATLAB's standard marker type specifications in whatever order you prefer.
The marker types will be used in order by values of the CodeVar
or the order of the variables listed for MarkerTypeXVars or MarkerTypeYVars.

<div class="p"><!----></div>
  <br />Example: <i>PlotTbl(...,'MarkerTypeSpecs','so*')</i> <br />

<div class="p"><!----></div>
In this example the first marker will be the square, the second will be the circle, and the third will be the asterisk.

<div class="p"><!----></div>
  <br />Name-value pair: <i>MarkerTypeLegend - cell array of legend labels</i>

<div class="p"><!----></div>
This name-value pair indicates that you want to replace the default labels of the marker types
with the new labels indicated in your cell array.

<div class="p"><!----></div>
  <br />Example: <i>PlotTbl(...,'MarkerTypeLegend',{'Male' 'Female'})</i> <br />

<div class="p"><!----></div>
In this example the legends for the first and second marker types will be "Male"
and "Female", respectively.
This would make sense if used in combination with the name-value pair 'MarkerTypeCodeVar','Gender'.

<div class="p"><!----></div>
     <h3><a name="tth_sEc6.3">
6.3</a>&nbsp;&nbsp;Name-value pairs for color control</h3>

<div class="p"><!----></div>
  <br />Name-value pair: <i>ColorCodeVar - variable name</i>

<div class="p"><!----></div>
This name-value pair indicates that a different color should be used
for each different value of the indicated variable.
The variable name is specified as a character vector, say sVar.

<div class="p"><!----></div>
  <br />Example: <i>PlotTbl(...,'ColorCodeVar','Gender')</i> <br />

<div class="p"><!----></div>
In this example different colors will be used to plot the data for males versus females.

<div class="p"><!----></div>
  <br />Name-value pair: <i>ColorXVars - cell array of variable names</i>

<div class="p"><!----></div>
This name-value pair indicates that different colors should be used to distinguish
different variables in the table, with those variables being used as X's in the X/Y plots.

<div class="p"><!----></div>
  <br />Example: <i>PlotTbl(...,'ColorXVars',{'AvgHeight' 'AvgWeight'})</i> <br />

<div class="p"><!----></div>
In this example different colors will be used depending on whether the X values
are AvgHeight or AvgWeight.

<div class="p"><!----></div>
  <br />Name-value pair: <i>ColorYVars - cell array of variable names</i>

<div class="p"><!----></div>
This name-value pair indicates that different colors should be used to distinguish
different variables in the table, with those variables being used as Y's in the X/Y plots.

<div class="p"><!----></div>
  <br />Example: <i>PlotTbl(...,'ColorYVars',{'AvgHeight' 'AvgWeight'})</i> <br />

<div class="p"><!----></div>
In this example different colors will be used depending on whether the Y values
are AvgHeight or AvgWeight. <br />

<div class="p"><!----></div>
Note: You should never specify <em>more than one</em> of the three options
ColorCodeVar, ColorXVars, and ColorYVars.
That is, colors can only be distinguished in one way or the other-not several.
If you want the colors to be distinguished in more than one way, use other
design elements.

<div class="p"><!----></div>
  <br />Name-value pair: <i>ColorSpecs - string list of color specifications</i>

<div class="p"><!----></div>
This name-value pair indicates that you want to replace the default set of color
specifications with a new set.
Use MATLAB's standard color specifications in whatever order you prefer.
The colors will be used in order by values of the CodeVar
or the order of the variables listed for ColorXVars or ColorYVars.

<div class="p"><!----></div>
  <br />Example: <i>PlotTbl(...,'ColorSpecs','rgbk')</i> <br />

<div class="p"><!----></div>
In this example the first line will be red, the second green, the third blue, and the fourth black.

<div class="p"><!----></div>
  <br />Name-value pair: <i>ColorLegend - cell array of legend labels</i>

<div class="p"><!----></div>
This name-value pair indicates that you want to replace the default labels of the colors
with the new labels indicated in your cell array.

<div class="p"><!----></div>
  <br />Example: <i>PlotTbl(...,'ColorLegend',{'Male' 'Female'})</i> <br />

<div class="p"><!----></div>
In this example the legends for the first and second colors will be "Male"
and "Female", respectively.
This would make sense if used in combination with the name-value pair 'ColorCodeVar','Gender'.

<div class="p"><!----></div>
     <h3><a name="tth_sEc6.4">
6.4</a>&nbsp;&nbsp;Name-value pairs for line width control</h3>

<div class="p"><!----></div>
  <br />Name-value pair: <i>LineWidthCodeVar - variable name</i>

<div class="p"><!----></div>
This name-value pair indicates that a different line width should be used
for each different value of the indicated variable.
The variable name is specified as a character vector, say sVar.

<div class="p"><!----></div>
  <br />Example: <i>PlotTbl(...,'LineWidthCodeVar','Gender')</i> <br />

<div class="p"><!----></div>
In this example different line widths will be used to plot the data for males versus females.

<div class="p"><!----></div>
  <br />Name-value pair: <i>LineWidthXVars - cell array of variable names</i>

<div class="p"><!----></div>
This name-value pair indicates that different line widths should be used to distinguish
different variables in the table, with those variables being used as X's in the X/Y plots.

<div class="p"><!----></div>
  <br />Example: <i>PlotTbl(...,'LineWidthXVars',{'AvgHeight' 'AvgWeight'})</i> <br />

<div class="p"><!----></div>
In this example different line widths will be used depending on whether the X values
are AvgHeight or AvgWeight.

<div class="p"><!----></div>
  <br />Name-value pair: <i>LineWidthYVars - cell array of variable names</i>

<div class="p"><!----></div>
This name-value pair indicates that different line widths should be used to distinguish
different variables in the table, with those variables being used as Y's in the X/Y plots.

<div class="p"><!----></div>
  <br />Example: <i>PlotTbl(...,'LineWidthYVars',{'AvgHeight' 'AvgWeight'})</i> <br />

<div class="p"><!----></div>
In this example different line widths will be used depending on whether the Y values
are AvgHeight or AvgWeight. <br />

<div class="p"><!----></div>
Note: You should never specify <em>more than one</em> of the three options
LineWidthCodeVar, LineWidthXVars, and LineWidthYVars.
That is, line widths can only be distinguished in one way or the other-not several.
If you want the line widths to be distinguished in more than one way, use other
design elements.

<div class="p"><!----></div>
  <br />Name-value pair: <i>LineWidthSpecs - vector of line widths</i>

<div class="p"><!----></div>
This name-value pair indicates that you want to replace the default set of line width
specifications with a new set.
Use MATLAB's standard line width specifications in whatever order you prefer.
The line widths will be used in order by values of the CodeVar
or the order of the variables listed for LineWidthXVars or LineWidthYVars.

<div class="p"><!----></div>
  <br />Example: <i>PlotTbl(...,'LineWidthSpecs',[3 5 8 12])</i> <br />

<div class="p"><!----></div>
In this example the first line will have width 3, the next width 5, etc.

<div class="p"><!----></div>
  <br />Name-value pair: <i>LineWidthLegend - cell array of legend labels</i>

<div class="p"><!----></div>
This name-value pair indicates that you want to replace the default labels of the line widths
with the new labels indicated in your cell array.

<div class="p"><!----></div>
  <br />Example: <i>PlotTbl(...,'LineWidthLegend',{'Male' 'Female'})</i> <br />

<div class="p"><!----></div>
In this example the legends for the first and second line widths will be "Male"
and "Female", respectively.
This would make sense if used in combination with the name-value pair 'LineWidthCodeVar','Gender'.

<div class="p"><!----></div>
     <h3><a name="tth_sEc6.5">
6.5</a>&nbsp;&nbsp;Name-value pairs for marker sizes control</h3>

<div class="p"><!----></div>
  <br />Name-value pair: <i>MarkerSizeCodeVar - variable name</i>

<div class="p"><!----></div>
This name-value pair indicates that a different marker sizes should be used
for each different value of the indicated variable.
The variable name is specified as a character vector, say sVar.

<div class="p"><!----></div>
  <br />Example: <i>PlotTbl(...,'MarkerSizeCodeVar','Gender')</i> <br />

<div class="p"><!----></div>
In this example different marker sizess will be used to plot the data for males versus females.

<div class="p"><!----></div>
  <br />Name-value pair: <i>MarkerSizeXVars - cell array of variable names</i>

<div class="p"><!----></div>
This name-value pair indicates that different marker sizess should be used to distinguish
different variables in the table, with those variables being used as X's in the X/Y plots.

<div class="p"><!----></div>
  <br />Example: <i>PlotTbl(...,'MarkerSizeXVars',{'AvgHeight' 'AvgWeight'})</i> <br />

<div class="p"><!----></div>
In this example different marker sizess will be used depending on whether the X values
are AvgHeight or AvgWeight.

<div class="p"><!----></div>
  <br />Name-value pair: <i>MarkerSizeYVars - cell array of variable names</i>

<div class="p"><!----></div>
This name-value pair indicates that different marker sizess should be used to distinguish
different variables in the table, with those variables being used as Y's in the X/Y plots.

<div class="p"><!----></div>
  <br />Example: <i>PlotTbl(...,'MarkerSizeYVars',{'AvgHeight' 'AvgWeight'})</i> <br />

<div class="p"><!----></div>
In this example different marker sizess will be used depending on whether the Y values
are AvgHeight or AvgWeight. <br />

<div class="p"><!----></div>
Note: You should never specify <em>more than one</em> of the three options
MarkerSizeCodeVar, MarkerSizeXVars, and MarkerSizeYVars.
That is, marker sizess can only be distinguished in one way or the other-not several.
If you want the marker sizess to be distinguished in more than one way, use other
design elements.

<div class="p"><!----></div>
  <br />Name-value pair: <i>MarkerSizeSpecs - vector of marker sizes</i>

<div class="p"><!----></div>
This name-value pair indicates that you want to replace the default set of marker sizes
specifications with a new set.
Use MATLAB's standard marker sizes specifications in whatever order you prefer.
The marker sizess will be used in order by values of the CodeVar
or the order of the variables listed for MarkerSizeXVars or MarkerSizeYVars.

<div class="p"><!----></div>
  <br />Example: <i>PlotTbl(...,'MarkerSizeSpecs',[7 10])</i> <br />

<div class="p"><!----></div>
In this example the first marker will have size 7 and the second will have size 10.

<div class="p"><!----></div>
  <br />Name-value pair: <i>MarkerSizeLegend - cell array of legend labels</i>

<div class="p"><!----></div>
This name-value pair indicates that you want to replace the default labels of the marker sizess
with the new labels indicated in your cell array.

<div class="p"><!----></div>
  <br />Example: <i>PlotTbl(...,'MarkerSizeLegend',{'Male' 'Female'})</i> <br />

<div class="p"><!----></div>
In this example the legends for the first and second marker sizess will be "Male"
and "Female", respectively.
This would make sense if used in combination with the name-value pair 'MarkerSizeCodeVar','Gender'.

<div class="p"><!----></div>
     <h3><a name="tth_sEc6.6">
6.6</a>&nbsp;&nbsp;Name-value pairs for subplot row and column control</h3>

<div class="p"><!----></div>
  <br />Name-value pair: <i>SubplotRowsCodeVar - variable name</i>
  <br />Name-value pair: <i>SubplotColsCodeVar - variable name</i>

<div class="p"><!----></div>
Each of these two name-value pairs indicates that a different subplot row or column
should be used for each different value of the indicated variable.
The variable name is specified as a character vector, say sVar.

<div class="p"><!----></div>
  <br />Example: <i>PlotTbl(...,'SubplotRowsCodeVar','Gender')</i> <br />

<div class="p"><!----></div>
This name-value pair indicates that the data for males and females should be plotted in two
different rows of subplots.

<div class="p"><!----></div>
  <br />Name-value pair: <i>SubplotRowsXVars - cell array of variable names</i>
  <br />Name-value pair: <i>SubplotColsXVars - cell array of variable names</i>

<div class="p"><!----></div>
Each of these two name-value pairs indicates that a different subplot row or column should
be used for X/Y plots with each of the indicated variable names on the X axis.

<div class="p"><!----></div>
  <br />Name-value pair: <i>SubplotRowsYVars - cell array of variable names</i>
  <br />Name-value pair: <i>SubplotColsYVars - cell array of variable names</i>

<div class="p"><!----></div>
Each of these two name-value pairs indicates that a different subplot row or column should
be used for X/Y plots with each of the indicated variable names on the Y axis.

<div class="p"><!----></div>
Note: You should never specify <em>more than one</em> of the three options
SubplotRowsCodeVar, SubplotRowsXVars, and SubplotRowsYVars,
and never more than one of the three corresponding SubplotCols options.
But you can specify both SubplotRows and SubplotCols in any
combination that you want, since these are independent "design elements"
of the display (in the same sense that the line type and color are independent).

<div class="p"><!----></div>
Note: Extrapolating from the previous options, you might expect there to be
SubplotRowsSpecs and SubplotColsSpecs options, but these do not exist.

<div class="p"><!----></div>
  <br />Name-value pair: <i>SubplotRowsLegend - cell array of legend labels</i>
  <br />Name-value pair: <i>SubplotColsLegend - cell array of legend labels</i>

<div class="p"><!----></div>
Each of these two name-value pairs indicates that you want to replace the default labels
of these subplots with the new labels indicated in your cell array.
(Strictly speaking, these are not legends, but rather titles at
the tops of the subplots.)

<div class="p"><!----></div>
  <br />Example: <i>PlotTbl(...,'SubplotRowsLegend',{'Male' 'Female'})</i> <br />
This name-value pair indicates that you want the first subplot to be labelled Male
and the second to be labelled Female.
This would make sense in combination with the option
  <br />Example: <i>PlotTbl(...,'SubplotRowsCodeVar','Gender')</i> <br />

<div class="p"><!----></div>
 <h2><a name="tth_sEc7">
7</a>&nbsp;&nbsp;Name-value pairs for control of axis labels</h2>

<div class="p"><!----></div>
  <br />Name-value pair: <i>XLabel - vector of subplot numbers</i>
  <br />Name-value pair: <i>YLabel - vector of subplot numbers</i>
The length of the cell array is the number of subplots.

<div class="p"><!----></div>
  <br />Example: <i>PlotTbl(...,'XLabel',[7 8 9],'YLabel',[1 4 7)</i> <br />
With a 3x3 arrangement of subplots, this would label the X axes
of the plots in the bottom row and it would label the Y axes of
the subplots in the left-most column.

<div class="p"><!----></div>
  <br />Name-value pair: <i>XLabelStr - cell array of X labels for the subplots</i>
  <br />Name-value pair: <i>YLabelStr - cell array of Y labels for the subplots</i>
These options specify the X and Y axis labels for the subplots, which can be used to
override the defaults (i.e., the X and Y variable names).
These are essential when the desired axis label is not a legal MATLAB variable name.
The length of the cell array is the number of subplots.

<div class="p"><!----></div>
  <br />Example: <i>PlotTbl(...,'XLabelStr',{'alpha' 'alpha' 'alpha' 'alpha'}</i> <br />
This indicates that the X axes of all four subplots should be labelled &#945;.

<div class="p"><!----></div>
 <h2><a name="tth_sEc8">
8</a>&nbsp;&nbsp;Name-value pairs for control of legends</h2>

<div class="p"><!----></div>
  <br />Name-value pair: <i>Legend - vector of subplot numbers</i>
A list of the numbers of the subplots on which legends should be displayed.

<div class="p"><!----></div>
  <br />Example: <i>PlotTbl(...,'Legend',[1:3]</i> <br />

<div class="p"><!----></div>
This indicates that legends should be displayed in the first three subplots.

<div class="p"><!----></div>
  <br />Name-value pair: <i>LegendLoc - string</i>

<div class="p"><!----></div>
  <br />Name-value pair: <i>LegendPos - [left bottom width height]</i>

<div class="p"><!----></div>
  <br />Name-value pair: <i>LegendBox - true or false</i>

<div class="p"><!----></div>
This name-value pair indicates whether you want the box on the legend(s).
I think they just add clutter, so the default is false.

<div class="p"><!----></div>
 <h2><a name="tth_sEc9">
9</a>&nbsp;&nbsp;Tips</h2>

<div class="p"><!----></div>

<ul>
<li> PlotTbl plots the data from all of the rows in your table.
If you just want to plot some of the rows, just pass it a subset
of the table using MATLAB's standard row-selection methods.
In the following example, data are just plotted for the females.

<div class="p"><!----></div>
  <br />Example: <i>PlotTbl(AWH(AWH.Gender==2,:),'Age','AvgWeight','LineTypeCodeVar','Nationality');</i> <br />
<div class="p"><!----></div>
</li>

<li> For any design-element that does <em>not</em> vary across your plots,
PlotTbl uses the first of the default "Specs" options for that design element.
If you would prefer something else, you can change this just by setting the Specs
for that design element, even though you are not using it to distinguish between lines.

<div class="p"><!----></div>
For example, the square is the first of the default MarkerTypeSpecs, so all of the lines
will be drawn with square markers if you do not specify anything related to MarkerType
(i.e., MarkerTypeCodeVar, MarkerTypeXVars, or MarkerTypeYVars).
Perhaps you would prefer lines with no markers at all (e.g., if the points are closely
spaced along the X axis so that the markers smash together)?
In that case, include the option <i>PlotTbl(...,'MarkerTypeSpecs',' ',...) </i>
so that the first (and only) element of MarkerTypeSpecs is the space,
which asks for no marker at all.
You can always include the Specs option for any design element,
whether that element appears anywhere else in the PlotTbl command or not.
<div class="p"><!----></div>
</li>
</ul>

<div class="p"><!----></div>
 <h2><a name="tth_sEcA">
A</a>&nbsp;&nbsp;Appendix: A complete list of name-value pairs</h2>

<div class="p"><!----></div>
  <br />Name-value pair: <i>ColorCodeVar - variable name</i>
  <br />Name-value pair: <i>ColorLegend - cell array of legend labels</i>
  <br />Name-value pair: <i>ColorSpecs - string list of colors</i>
  <br />Name-value pair: <i>ColorXVars - cell array of variable names</i>
  <br />Name-value pair: <i>ColorYVars - cell array of variable names</i>
  <br />Name-value pair: <i>Legend - vector of subplot numbers</i>
  <br />Name-value pair: <i>LegendBox - true or false</i>
  <br />Name-value pair: <i>LegendLoc - </i>
  <br />Name-value pair: <i>LegendPos - [left bottom width height]</i>
  <br />Name-value pair: <i>LineTypeCodeVar - variable name</i>
  <br />Name-value pair: <i>LineTypeLegend - cell array of legend labels</i>
  <br />Name-value pair: <i>LineTypeSpecs - cell array of line type specifications</i>
  <br />Name-value pair: <i>LineTypeXVars - cell array of variable names</i>
  <br />Name-value pair: <i>LineTypeYVars - cell array of variable names</i>
  <br />Name-value pair: <i>LineWidthCodeVar - variable name</i>
  <br />Name-value pair: <i>LineWidthLegend - cell array of legend labels</i>
  <br />Name-value pair: <i>LineWidthSpecs - vector of line widths</i>
  <br />Name-value pair: <i>LineWidthXVars - cell array of variable names</i>
  <br />Name-value pair: <i>LineWidthYVars - cell array of variable names</i>
  <br />Name-value pair: <i>MarkerSizeCodeVar - variable name</i>
  <br />Name-value pair: <i>MarkerSizeLegend - cell array of legend labels</i>
  <br />Name-value pair: <i>MarkerSizeSpecs - vector of marker sizes</i>
  <br />Name-value pair: <i>MarkerSizeXVars - cell array of variable names</i>
  <br />Name-value pair: <i>MarkerSizeYVars - cell array of variable names</i>
  <br />Name-value pair: <i>MarkerTypeCodeVar - variable name</i>
  <br />Name-value pair: <i>MarkerTypeLegend - cell array of legend labels</i>
  <br />Name-value pair: <i>MarkerTypeSpecs - string list of marker type specifications</i>
  <br />Name-value pair: <i>MarkerTypeXVars - cell array of variable names</i>
  <br />Name-value pair: <i>MarkerTypeYVars - cell array of variable names</i>
  <br />Name-value pair: <i>SubplotColsCodeVar - variable name</i>
  <br />Name-value pair: <i>SubplotColsLegend - cell array of legend labels</i>
  <br />Name-value pair: <i>SubplotColsXVars - cell array of variable names</i>
  <br />Name-value pair: <i>SubplotColsYVars - cell array of variable names</i>
  <br />Name-value pair: <i>SubplotRowsCodeVar - variable name</i>
  <br />Name-value pair: <i>SubplotRowsLegend - cell array of legend labels</i>
  <br />Name-value pair: <i>SubplotRowsXVars - cell array of variable names</i>
  <br />Name-value pair: <i>SubplotRowsYVars - cell array of variable names</i>
  <br />Name-value pair: <i>XLabel - vector of subplot numbers</i>
  <br />Name-value pair: <i>XLabelStr - vector of subplot numbers</i>
  <br />Name-value pair: <i>YLabel - vector of subplot numbers</i>
  <br />Name-value pair: <i>YLabelStr - vector of subplot numbers</i>

<div class="p"><!----></div>
 <h2><a name="tth_sEcB">
B</a>&nbsp;&nbsp;Appendix: Line types in MATLAB</h2>

<div class="p"><!----></div>
In PlotTbl's default order:

<div class="p"><!----></div>

<ul>
<li> '-': Solid line
<div class="p"><!----></div>
</li>

<li> '-': Dashed line
<div class="p"><!----></div>
</li>

<li> ':': Dotted line
<div class="p"><!----></div>
</li>

<li> '-.': Dash-dot line
<div class="p"><!----></div>
</li>
</ul>

<div class="p"><!----></div>
 <h2><a name="tth_sEcC">
C</a>&nbsp;&nbsp;Appendix: Marker types in MATLAB</h2>

<div class="p"><!----></div>
In PlotTbl's default order:

<div class="p"><!----></div>

<ul>
<li> 'square' or 's': Square
<div class="p"><!----></div>
</li>

<li> 'o': Circle
<div class="p"><!----></div>
</li>

<li> 'diamond' or 'd': Diamond
<div class="p"><!----></div>
</li>

<li> '^': Upward-pointing triangle
<div class="p"><!----></div>
</li>

<li> 'v': Downward-pointing triangle
<div class="p"><!----></div>
</li>

<li> '+': Plus sign
<div class="p"><!----></div>
</li>

<li> 'x': Cross
<div class="p"><!----></div>
</li>

<li> '*': Asterisk
<div class="p"><!----></div>
</li>

<li> '.': Point
<div class="p"><!----></div>
</li>

<li> ' &gt; ': Right-pointing triangle
<div class="p"><!----></div>
</li>

<li> ' &lt; ': Left-pointing triangle
<div class="p"><!----></div>
</li>

<li> 'pentagram' or 'p': Five-pointed star (pentagram)
<div class="p"><!----></div>
</li>

<li> 'hexagram' or 'h': Six-pointed star (hexagram)
<div class="p"><!----></div>
</li>
</ul>

<div class="p"><!----></div>
 <h2><a name="tth_sEcD">
D</a>&nbsp;&nbsp;Appendix: Colors in MATLAB</h2>

<div class="p"><!----></div>
In PlotTbl's default order:

<div class="p"><!----></div>

<ul>
<li> k: Black
<div class="p"><!----></div>
</li>

<li> r: Red
<div class="p"><!----></div>
</li>

<li> g: Green
<div class="p"><!----></div>
</li>

<li> b: Blue
<div class="p"><!----></div>
</li>

<li> c: Cyan
<div class="p"><!----></div>
</li>

<li> m: Magenta
<div class="p"><!----></div>
</li>

<li> y: Yellow
<div class="p"><!----></div>
</li>

<li> w: White
<div class="p"><!----></div>
</li>
</ul>

<div class="p"><!----></div>

<br /><br /><hr /><small>File translated from
T<sub><font size="-1">E</font></sub>X
by <a href="http://hutchinson.belmont.ma.us/tth/">
T<sub><font size="-1">T</font></sub>Hgold</a>,
version 4.00.<br />On 25 Sep 2017, 07:07.</small>
</html>
